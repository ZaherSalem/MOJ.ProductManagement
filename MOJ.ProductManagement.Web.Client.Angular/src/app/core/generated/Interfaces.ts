
/**
 * WARNING: This file is auto-generated.
 * Do not edit this file manually.
 * Generated on: 2025-06-25 19:54:08
 */

export interface IPaginatedRequest {
    PageNumber: number;
    PageSize: number;
    SearchValue: string | null;
}

export interface IPaginatedResult<T> {
    Detail: object;
    CurrentPage: number;
    TotalPages: number;
    TotalCount: number;
    PageSize: number;
    IsNormalUser: boolean | null;
}

export interface IResult<T> {
    Messages: string[];
    Succeeded: boolean;
    Data: T;
    Exception: any;
    Code: number;
}

export interface ICreateProductDto {
    Name: string;
    QuantityPerUnitId: number;
    ReorderLevel: number;
    SupplierId: number;
    UnitPrice: number;
    UnitsInStock: number;
    UnitsOnOrder: number;
}

export interface IProductDto {
    Id: number;
    Name: string;
    QuantityPerUnitId: number;
    ReorderLevel: number;
    SupplierId: number;
    UnitPrice: number;
    UnitsInStock: number;
    UnitsOnOrder: number;
    LastOrderDate: Date;
    SupplierName: string;
    QuantityPerUnitName: string;
}

export interface IProductFilter {
    PageNumber: number;
    PageSize: number;
    SearchTerm: string;
    SupplierId: number | null;
    MinPrice: number | null;
    MaxPrice: number | null;
    NeedsReorder: boolean | null;
}

export interface IProductStatisticsDto {
    ProductsToReorder: IProductDto[] | null;
    LargestSupplier: ILargestSupplierDto | null;
    ProductWithMinimumOrders: IProductDto | null;
}

export interface IUpdateProductDto {
    Id: number;
    Name: string;
    QuantityPerUnitId: number;
    ReorderLevel: number;
    SupplierId: number;
    UnitPrice: number;
    UnitsInStock: number;
    UnitsOnOrder: number;
}

export interface ICreateSupplierDto {
    Name: string;
}

export interface ILargestSupplierDto {
    Id: number;
    Name: string;
    ProductCount: number;
}

export interface ISupplierDto {
    Id: number;
    Name: string;
    Code: number;
}

export interface ISupplierWithStatsDto {
    SupplierId: number;
    SupplierName: string;
    ProductCount: number;
    TotalInventoryValue: number;
}

export interface IUpdateSupplierDto {
    Id: number;
    Name: string;
}


